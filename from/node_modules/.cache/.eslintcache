[{"C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\index.js":"1","C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\App.js":"2","C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\reportWebVitals.js":"3","C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\components\\pages\\Formulario\\index.js":"4","C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\components\\atoms\\Button\\Button.js":"5","C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\components\\molecules\\FormGroup\\FormGroup.js":"6","C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\components\\atoms\\FormSelect\\FormSelect.js":"7","C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\components\\molecules\\excel\\ExportReactCSV.js":"8","C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\components\\atoms\\FormLabel\\FormLabel.js":"9","C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\components\\atoms\\FormControl\\FormControl.js":"10"},{"size":500,"mtime":1647726700354,"results":"11","hashOfConfig":"12"},{"size":910,"mtime":1647863065781,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1647726700462,"results":"14","hashOfConfig":"12"},{"size":7716,"mtime":1647969237034,"results":"15","hashOfConfig":"12"},{"size":562,"mtime":1647841748527,"results":"16","hashOfConfig":"12"},{"size":1008,"mtime":1647832795062,"results":"17","hashOfConfig":"12"},{"size":481,"mtime":1647846271005,"results":"18","hashOfConfig":"12"},{"size":320,"mtime":1647856149027,"results":"19","hashOfConfig":"12"},{"size":338,"mtime":1647727167850,"results":"20","hashOfConfig":"12"},{"size":638,"mtime":1647834266789,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"llzver",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\index.js",[],[],"C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\App.js",["54","55"],[],"import logo from './logo.svg';\nimport fondo from './images/fondo.jpg';\nimport TEXTURAS from './images/TEXTURAS.png';\nimport KV from './images/KV.png';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Formulario from './components/pages/Formulario/index'\nvar {XLSX} = require(\"xlsx\");\n\nfunction App() {\n  \n  return (\n    <div className='Portada'>      \n      <img src={fondo} className=\"Fondo-Portada\" alt=\"logo\" />\n      <Container>\n        <img src={TEXTURAS} className=\"Logo\" alt=\"logo\" />\n        <Row className='tablas'>\n          <Col sm=\"6\" md=\"6\" lg=\"6\" className='logoHome'>\n           <img src={KV} className=\"Logo\" alt=\"logo\" />\n          </Col>\n          <Col sm=\"6\" md=\"\" lg=\"\">\n            <Formulario className='formulario'/>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\reportWebVitals.js",[],[],"C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\components\\pages\\Formulario\\index.js",["56","57","58","59","60","61"],[],"import { useEffect, useState } from \"react\"\r\nimport { Form, Row, Col, Container, View } from 'react-bootstrap'\r\nimport ButtonCuston  from '../../atoms/Button/Button';\r\nimport FormGroup from '../../molecules/FormGroup/FormGroup';\r\nimport FormSelect from '../../atoms/FormSelect/FormSelect';\r\nimport axios from 'axios'\r\nimport { ExportReactCSV } from '../../molecules/excel/ExportReactCSV'\r\n\r\nfunction Todo(props) {\r\n  const [ NombreCliente, setNombreCliente ] = useState(\"\")\r\n  const [ Nit, setNit ] = useState(\"\")\r\n  const [ NombreDelPunto, setNombreDelPunto ] = useState(\"\")\r\n  const [ NombreDelEquipo, setNombreDelEquipo ] = useState(\"\")\r\n  const [ Ciudad, setCiudad ] = useState(\"\")\r\n  const [ dataCiudad, setDataCiudad ] = useState([\r\n    {value:\"Bogota D.C\",text:\"Bogota D.C\"},\r\n    {value:\"Tarqui\",text:\"Tarqui\"},\r\n    {value:\"Garzon\",text:\"Garzon\"},\r\n  ])\r\n  const [ Promotor, setPromotor ] = useState(\"\")\r\n  const [ RTC, setRTC ] = useState(\"\")\r\n  const [ Capitan, setCapitan ] = useState(\"\")\r\n  const [ estadoFormulario, setEstadoFormulario ] = useState(true)\r\n  const [ip, setIP] = useState('');\r\n  const [excel, setExcel] = useState([]);\r\n  const [check, setCheck] = useState();\r\n\r\n  var isLoading = false;\r\n\r\n  const rtc = data => {\r\n    if (data.target.value < 0) {\r\n      setRTC(\"\")\r\n    } else if(Number.isInteger(data.target.value)) {\r\n      setRTC(\"\")\r\n    } else {\r\n      setRTC(data.target.value.replace(/[^0-9\\d]/ig, \"\"))\r\n    }\r\n    console.log(data.target.value.replace(/[^0-9\\d]/ig, \"\"));\r\n  }\r\nconst getip = async () => {\r\n    const res = await axios.get('https://geolocation-db.com/json/')\r\n    console.log(res.data.IPv4);\r\n    setIP(res.data.IPv4)\r\n  }\r\n  \r\n  useEffect( () => {\r\n    \r\n    getip()\r\n\r\n  }, [])\r\n  const validar = () =>{\r\n    if (NombreCliente == \"\") {\r\n      alert(\"El Nombre Cliente no puede ser vacio\");\r\n      return false;\r\n    } else if(Nit == \"\"){\r\n      alert(\"El Nit no puede ser vacio\");\r\n      return false;\r\n    }else if(check == undefined){\r\n      alert(\"Tienes que aceptar los terminos y condiciones.\");\r\n      return false;\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n  const enviar = async(data) => {\r\n    console.log(check);\r\n    if (validar()) {\r\n      setEstadoFormulario(false);\r\n      setExcel(customers());\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: new Headers({\r\n          'Content-Type': 'application/x-www-form-urlencoded'}),\r\n        body: \"NombreCliente=\"+NombreCliente+\"&\"+\r\n        \"NIT=\"+ Nit+\"&\"+\r\n        \"NombreDelPunto=\"+ NombreDelPunto+\"&\"+\r\n        \"NombreDelEquipo=\"+ NombreDelEquipo+\"&\"+\r\n        \"Ciudad=\"+ Ciudad+\"&\"+\r\n        \"Promotor=\"+ Promotor+\"&\"+\r\n        \"RTC=\"+ RTC+\"&\"+\r\n        \"Capitan=\"+ Capitan,\r\n    };\r\n      \r\n    await fetch('http://127.0.0.1/', requestOptions)\r\n        .then(response => response.json()).then(res => {\r\n          if (res.success) {\r\n            console.log(res);\r\n          }else{\r\n          //mensaje de error\r\n          }\r\n        });\r\n    } else {\r\n      \r\n    }\r\n    \r\n  }\r\n  const customers = () => {\r\n    let custs = []\r\n    for (let i = 0; i < 1; i++) {\r\n      custs.push({\r\n        NombreCliente: NombreCliente, \r\n        Nit: Nit,\r\n        NombreDelPunto: NombreDelPunto, \r\n        NombreDelEquipo: NombreDelEquipo, \r\n        Ciudad: Ciudad,\r\n        Promotor: Promotor,\r\n        RTC: RTC,\r\n        Capitan: Capitan,\r\n        ip: ip\r\n      });\r\n    }\r\n    console.log(custs);\r\n    return custs;\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div style={{ display: !estadoFormulario ? \"\" : \"none\", textAlign: \"center\" }}>\r\n        <div>Gracias</div>        \r\n        <div className=\"col-md-4 center\">\r\n          <ExportReactCSV csvData={excel} fileName={\"DatosUsuario\"} />\r\n        </div>\r\n      </div>\r\n      <Form action=\"#\" style={{ display: estadoFormulario ? \"\" : \"none\" }}>\r\n        <Row>\r\n          <label><label className=\"numero\">1.</label> Incriccion punto de venta</label>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <FormGroup \r\n              controlId=\"NombreCliente\"\r\n              label='Nombre del Cliente' \r\n              type=\"text\"\r\n              placeholder=\"Nombre del Cliente\"\r\n              name='NombreCliente'\r\n              value={NombreCliente}\r\n              required={true}\r\n              onChange={(e) => setNombreCliente(e.target.value.replace(/[^a-zA-Z\\d]/ig, \"\"))}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <FormGroup \r\n              controlId=\"NIT\"\r\n              label='NIT' \r\n              type=\"text\"\r\n              placeholder=\"NIT\"\r\n              name='NIT'\r\n              value={Nit}\r\n              required={true}\r\n              onChange={(e) => setNit(e.target.value.replace(/[^a-zA-Z\\d]/ig, \"\"))}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <FormGroup \r\n              controlId=\"Nombre del punto\"\r\n              label='Nombre del punto' \r\n              type=\"text\"\r\n              placeholder=\"Nombre del punto\"\r\n              name='NombreDelPunto'\r\n              value={NombreDelPunto}\r\n              onChange={(e) => setNombreDelPunto(e.target.value.replace(/[^a-zA-Z\\d]/ig, \"\"))}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <FormGroup \r\n              controlId=\"Nombre del equipo\"\r\n              label='Nombre del equipo' \r\n              type=\"text\"\r\n              placeholder=\"Nombre del equipo\"\r\n              name='NombreDelEquipo'\r\n              value={NombreDelEquipo}\r\n              onChange={(e) => setNombreDelEquipo(e.target.value.replace(/[^a-zA-Z\\d]/ig, \"\"))}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginTop: \"9%\" }}>\r\n          <Col>\r\n            <FormSelect \r\n              onChange={(e) => setCiudad(e.target.value)}\r\n              select={dataCiudad}/>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <FormGroup \r\n              controlId=\"Promotor\"\r\n              label='Promotor' \r\n              type=\"text\"\r\n              placeholder=\"Promotor\"\r\n              name='Promotor'\r\n              value={Promotor}\r\n              onChange={(e) => setPromotor(e.target.value.replace(/[^a-zA-Z\\d]/ig, \"\"))}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <FormGroup \r\n              controlId=\"RTC\"\r\n              label='RTC' \r\n              type=\"text\"\r\n              placeholder=\"RTC\"\r\n              name='RTC'\r\n              value={RTC}\r\n              onChange={(e) => rtc(e)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <FormGroup \r\n              controlId=\"Capitan\"\r\n              label='Capitan y/o Usuario (Solo Minusculas)' \r\n              type=\"text\"\r\n              placeholder=\"Capitan y/o Usuario (Solo Minusculas)\"\r\n              name='Capitan'\r\n              value={Capitan}\r\n              onChange={(e) => setCapitan(e.target.value.replace(/[^a-zA-Z\\d]/ig, \"\"))}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Check \r\n          onChange={(e) => setCheck(e.target.value)}\r\n          type=\"checkbox\" \r\n          label=\"He leido y acepto las politicas de Tratamiento de Datos Personales Conoce los terminos y condiciones \" required/>\r\n        </Form.Group>\r\n        </Row>\r\n        <Row>\r\n        <ButtonCuston \r\n            variant=\"primary\" \r\n            onClick={() => enviar(this)}\r\n            //disabled={isLoading}\r\n            text={isLoading ? '...loading' : 'Seguimiento'}\r\n            />\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Todo","C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\components\\atoms\\Button\\Button.js",[],[],"C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\components\\molecules\\FormGroup\\FormGroup.js",[],[],"C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\components\\atoms\\FormSelect\\FormSelect.js",[],[],"C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\components\\molecules\\excel\\ExportReactCSV.js",[],[],"C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\components\\atoms\\FormLabel\\FormLabel.js",[],[],"C:\\Users\\Manuel Fernando\\Documents\\GitHub\\PruebaLegger\\from\\src\\components\\atoms\\FormControl\\FormControl.js",[],[],{"ruleId":"62","severity":1,"message":"63","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":12},{"ruleId":"62","severity":1,"message":"66","line":9,"column":6,"nodeType":"64","messageId":"65","endLine":9,"endColumn":10},{"ruleId":"62","severity":1,"message":"67","line":2,"column":26,"nodeType":"64","messageId":"65","endLine":2,"endColumn":35},{"ruleId":"62","severity":1,"message":"68","line":2,"column":37,"nodeType":"64","messageId":"65","endLine":2,"endColumn":41},{"ruleId":"62","severity":1,"message":"69","line":15,"column":23,"nodeType":"64","messageId":"65","endLine":15,"endColumn":36},{"ruleId":"70","severity":1,"message":"71","line":52,"column":23,"nodeType":"72","messageId":"73","endLine":52,"endColumn":25},{"ruleId":"70","severity":1,"message":"71","line":55,"column":19,"nodeType":"72","messageId":"73","endLine":55,"endColumn":21},{"ruleId":"70","severity":1,"message":"71","line":58,"column":20,"nodeType":"72","messageId":"73","endLine":58,"endColumn":22},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'XLSX' is assigned a value but never used.","'Container' is defined but never used.","'View' is defined but never used.","'setDataCiudad' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]